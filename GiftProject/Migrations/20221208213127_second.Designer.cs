// <auto-generated />
using System;
using GiftProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GiftProject.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221208213127_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GiftProject.Models.Box", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("volumeid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("volumeid");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("GiftProject.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("GiftProject.Models.Description", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Boxid")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Boxid");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("GiftProject.Models.FilledBox", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Cartid")
                        .HasColumnType("integer");

                    b.Property<int>("boxid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Cartid");

                    b.HasIndex("boxid");

                    b.ToTable("FilledBoxes");
                });

            modelBuilder.Entity("GiftProject.Models.Filler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("FilledBoxid")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("FilledBoxid");

                    b.ToTable("Fillers");
                });

            modelBuilder.Entity("GiftProject.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GiftProject.Models.Volume", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("height")
                        .HasColumnType("integer");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<int>("weight")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Volumes");
                });

            modelBuilder.Entity("GiftProject.Models.Box", b =>
                {
                    b.HasOne("GiftProject.Models.Volume", "volume")
                        .WithMany()
                        .HasForeignKey("volumeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("volume");
                });

            modelBuilder.Entity("GiftProject.Models.Description", b =>
                {
                    b.HasOne("GiftProject.Models.Box", null)
                        .WithMany("description")
                        .HasForeignKey("Boxid");
                });

            modelBuilder.Entity("GiftProject.Models.FilledBox", b =>
                {
                    b.HasOne("GiftProject.Models.Cart", null)
                        .WithMany("filledBoxes")
                        .HasForeignKey("Cartid");

                    b.HasOne("GiftProject.Models.Box", "box")
                        .WithMany()
                        .HasForeignKey("boxid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("box");
                });

            modelBuilder.Entity("GiftProject.Models.Filler", b =>
                {
                    b.HasOne("GiftProject.Models.FilledBox", null)
                        .WithMany("fillers")
                        .HasForeignKey("FilledBoxid");
                });

            modelBuilder.Entity("GiftProject.Models.Box", b =>
                {
                    b.Navigation("description");
                });

            modelBuilder.Entity("GiftProject.Models.Cart", b =>
                {
                    b.Navigation("filledBoxes");
                });

            modelBuilder.Entity("GiftProject.Models.FilledBox", b =>
                {
                    b.Navigation("fillers");
                });
#pragma warning restore 612, 618
        }
    }
}
